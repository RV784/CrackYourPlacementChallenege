//https://practice.geeksforgeeks.org/problems/chocolate-distribution-problem3825/1/#

// { Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;
class GfG
{
    public static void main (String[] args)
    {
        
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        
        while(t-- > 0)
        {
            long n = sc.nextLong();
            ArrayList<Long> arr = new ArrayList<Long>();
            for(int i = 0;i<n;i++)
                {
                    long x = sc.nextInt();
                    arr.add(x);
                }
            long m = sc.nextLong();
            
            Solution ob = new Solution();
            
    		System.out.println(ob.findMinDiff(arr,n,m));
        }
        
    }
}// } Driver Code Ends


//User function Template for Java

class Solution
{
    public long findMinDiff (ArrayList<Long> a, long n, long m)
    {
        long[] arr = new long[a.size()];
        for(int i = 0 ; i < arr.length ; i++){
            arr[i] = a.get(i);
        }
        
        
        
        Arrays.sort(arr);
        // for(int i = 0 ; i < arr.length ; i++){
        //     System.out.println(arr[i]);
        // }
        long ans = Integer.MAX_VALUE;
        int s = 0;
        int e = (int)m-1;
        while(e < arr.length){
            ans = Math.min(ans, arr[e]- arr[s]);
            s++;
            e++;
        }
        
        return ans;
    }
}