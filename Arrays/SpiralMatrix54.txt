class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> res = new ArrayList();
        if(matrix.length == 0)
            return res;
        
        //Boundaries
         int rowBegin = 0;
         int rowEnd = matrix.length-1;
         int colBegin = 0;
         int colEnd = matrix[0].length-1;
        
        //Main loop
        while(rowBegin <= rowEnd && colBegin <= colEnd){
            //moving right
            for(int i = colBegin ; i <= colEnd ; i++){
                res.add(matrix[rowBegin][i]);
            }
            rowBegin++;
            
            //moving down
            for(int i = rowBegin ; i <= rowEnd ; i++){
                res.add(matrix[i][colEnd]);
            }
            colEnd--;
            
            if(rowBegin <= rowEnd){
                //moving left
                for(int i = colEnd ; i >= colBegin ; i--){
                    res.add(matrix[rowEnd][i]);
                }
            }
            rowEnd--;
            
            if(colBegin <= colEnd){
                //moving up
                for(int i = rowEnd ; i >= rowBegin ; i--){
                    res.add(matrix[i][colBegin]);
                }
            }
            colBegin++;
        }
        return res;
    }